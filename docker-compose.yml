version: '3.9'

services:
  db:
    image: postgres:15
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  celery:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: celery
    command: celery -A backend worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - db
      - redis
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: django
    volumes:
      - ./backend:/app
    command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      - db
      - redis
    networks:
      - app-network

  frontend:
    build:
      context: ./starck-Frontend
      dockerfile: ../Dockerfile.frontend
    container_name: react
    volumes:
      - ./starck-Frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    networks:
      - app-network
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./starck-Frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - app-network


volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
